{
  "compilerOptions": {
    "target": "es6",
    "module": "esnext",
    "moduleResolution": "node",
    // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,  // 允许export=导出，由import from 导入
    "sourceMap": true,
    "removeComments": false,  // 删除注释 
    "forceConsistentCasingInFileNames": true, // 禁止对同一个文件的不一致的引用。
    "rootDirs": ["./src"],
    "baseUrl": "./src",
    "paths": {
      "@constants/*": ["constants/*"],
      "@services/*": ["services/*"],
      "@store/*": ["store/*"],
      "@utils/*": ["utils/*"],
      "@assets/*": ["assets/*"],
      "@locales/*": ["locales/*"],
      "@components/*": ["components/*"],
      "@views/*": ["containers/views/*"],
      "@shared/*": ["containers/shared/*"]
    },
    "jsx": "react",
    "alwaysStrict": true, // 在代码中注入'use strict'
    "noUnusedLocals": true, // 检查只声明、未使用的局部变量(只提示不报错)
    "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块
    "experimentalDecorators": true,  // 启用实验性的ES装饰器。
    "resolveJsonModule": true,  //是否允许把json文件当做模块进行解析
    "lib": ["esnext", "dom", "dom.iterable",],
    "skipLibCheck": true,
    "typeRoots": ["node", "node_modules/@types", "./typings"]
  },
}
